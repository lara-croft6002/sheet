Slip 1
Q1.A
import java.util.Scanner;

public class Rectangle {
    // Method to calculate area and perimeter of a rectangle
    public static void calculateRectangleProperties(double length, double breadth) {
        double area = length * breadth;
        double perimeter = 2 * (length + breadth);
        
        // Output results
        System.out.println("Area of the rectangle: " + area);
        System.out.println("Perimeter of the rectangle: " + perimeter);
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Input from user
        System.out.print("Enter the length of the rectangle: ");
        double length = scanner.nextDouble();
        
        System.out.print("Enter the breadth of the rectangle: ");
        double breadth = scanner.nextDouble();

        // Validate inputs
        if (length <= 0 || breadth <= 0) {
            System.out.println("Length and breadth must be positive numbers.");
        } else {
            // Calculate area and perimeter
            calculateRectangleProperties(length, breadth);
        }

        scanner.close();
    }
}
-------------------------------------------------------
Q2 
import java.util.Scanner;

// Abstract class Order
abstract class Order {
    protected int id;
    protected String description;

    public Order(int id, String description) {
        this.id = id;
        this.description = description;
    }

    // Abstract methods
    abstract void accept();
    abstract void display();
}

// Subclass PurchaseOrder
class PurchaseOrder extends Order {
    private String vendorName;

    public PurchaseOrder(int id, String description) {
        super(id, description);
    }

    @Override
    void accept() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter vendor name for Purchase Order (ID: " + id + "): ");
        vendorName = scanner.nextLine();
    }

    @Override
    void display() {
        System.out.println("Purchase Order ID: " + id);
        System.out.println("Description: " + description);
        System.out.println("Vendor Name: " + vendorName);
    }
}

// Subclass SalesOrder
class SalesOrder extends Order {
    private String customerName;

    public SalesOrder(int id, String description) {
        super(id, description);
    }

    @Override
    void accept() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter customer name for Sales Order (ID: " + id + "): ");
        customerName = scanner.nextLine();
    }

    @Override
    void display() {
        System.out.println("Sales Order ID: " + id);
        System.out.println("Description: " + description);
        System.out.println("Customer Name: " + customerName);
    }
}

// Main class
public class OrderTest {
    public static void main(String[] args) {
        PurchaseOrder[] purchaseOrders = new PurchaseOrder[3];
        SalesOrder[] salesOrders = new SalesOrder[3];

        // Accept details for Purchase Orders
        for (int i = 0; i < 3; i++) {
            purchaseOrders[i] = new PurchaseOrder(i + 1, "Purchase Order Description " + (i + 1));
            purchaseOrders[i].accept();
        }

        // Accept details for Sales Orders
        for (int i = 0; i < 3; i++) {
            salesOrders[i] = new SalesOrder(i + 1, "Sales Order Description " + (i + 1));
            salesOrders[i].accept();
        }

        // Display details of Purchase Orders
        System.out.println("\n--- Purchase Orders ---");
        for (PurchaseOrder order : purchaseOrders) {
            order.display();
            System.out.println();
        }

        // Display details of Sales Orders
        System.out.println("--- Sales Orders ---");
        for (SalesOrder order : salesOrders) {
            order.display();
            System.out.println();
        }
    }
}
 