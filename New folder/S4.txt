Slip 4
Q1
import java.util.Calendar;
import java.util.Date;
import java.text.SimpleDateFormat;

public class DateTimeDisplay {
    public static void main(String[] args) {
        // Create a Date object to get the current date and time
        Date currentDate = new Date();
        
        // Create SimpleDateFormat instances for various formats
        SimpleDateFormat format1 = new SimpleDateFormat("dd/MM/yyyy");
        SimpleDateFormat format2 = new SimpleDateFormat("MM-dd-yyyy");
        SimpleDateFormat format3 = new SimpleDateFormat("EEEE MMMM dd yyyy");
        SimpleDateFormat format4 = new SimpleDateFormat("EEE MMMM dd HH:mm:ss zzz yyyy");
        SimpleDateFormat format5 = new SimpleDateFormat("dd/MM/yy HH:mm:ss a Z");
        SimpleDateFormat format6 = new SimpleDateFormat("HH:mm:ss");
        
        // Display current date and time in various formats
        System.out.println("Current date is : " + format1.format(currentDate));
        System.out.println("Current date is : " + format2.format(currentDate));
        System.out.println("Current date is : " + format3.format(currentDate));
        System.out.println("Current date and time is : " + format4.format(currentDate));
        System.out.println("Current date and time is : " + format5.format(currentDate));
        System.out.println("Current time is : " + format6.format(currentDate));

        // Get the current calendar instance
        Calendar calendar = Calendar.getInstance();

        // Get current week of the year
        int weekOfYear = calendar.get(Calendar.WEEK_OF_YEAR);
        System.out.println("Current week of year is : " + weekOfYear);

        // Get current week of the month
        int weekOfMonth = calendar.get(Calendar.WEEK_OF_MONTH);
        System.out.println("Current week of month is : " + weekOfMonth);

        // Get current day of the year
        int dayOfYear = calendar.get(Calendar.DAY_OF_YEAR);
        System.out.println("Current day of the year is : " + dayOfYear);
    }
}
----------------------------------------
Q2
import javax.swing.*;
import java.awt.event.*;

public class MouseEventDemo extends JFrame {
    private JTextField textField;

    public MouseEventDemo() {
        // Set up the frame
        setTitle("Mouse Event Demo");
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(null); // Using no layout for absolute positioning

        // Create a text field to display mouse click position
        textField = new JTextField();
        textField.setBounds(50, 200, 300, 30);
        textField.setEditable(false);
        add(textField);

        // Add mouse listener for mouse clicks
        addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                // Get the position of the mouse click
                int x = e.getX();
                int y = e.getY();
                // Display the position in the text field
                textField.setText("Mouse Clicked at: (" + x + ", " + y + ")");
            }
        });

        // Add mouse motion listener for mouse movement
        addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseMoved(MouseEvent e) {
                // Get the position of the mouse movement
                int x = e.getX();
                int y = e.getY();
                // Optionally, update the title with mouse position
                setTitle("Mouse Moved at: (" + x + ", " + y + ")");
            }
        });
    }

    public static void main(String[] args) {
        // Create the frame instance and make it visible
        MouseEventDemo demo = new MouseEventDemo();
        demo.setVisible(true);
    }
}
------------------------------------------
Q2
public class MyNumber {
    // Private data member
    private int number;

    /**
     * Default constructor that initializes the number to 0.
     */
    public MyNumber() {
        this.number = 0; // Initialize to 0
    }

    /**
     * Parameterized constructor that initializes the number to a given value.
     * @param value The integer value to initialize the number with.
     */
    public MyNumber(int value) {
        this.number = value; // Initialize with the given value
    }

    /**
     * Checks if the number is negative.
     * @return true if the number is negative, false otherwise.
     */
    public boolean isNegative() {
        return number < 0;
    }

    /**
     * Checks if the number is positive.
     * @return true if the number is positive, false otherwise.
     */
    public boolean isPositive() {
        return number > 0;
    }

    /**
     * Checks if the number is zero.
     * @return true if the number is zero, false otherwise.
     */
    public boolean isZero() {
        return number == 0;
    }

    /**
     * Checks if the number is odd.
     * @return true if the number is odd, false otherwise.
     */
    public boolean isOdd() {
        return number % 2 != 0;
    }

    /**
     * Checks if the number is even.
     * @return true if the number is even, false otherwise.
     */
    public boolean isEven() {
        return number % 2 == 0;
    }

    /**
     * Main method to create a MyNumber object from command line arguments.
     * @param args Command line arguments, where the first argument is the integer value.
     */
    public static void main(String[] args) {
        // Check if an argument is provided
        if (args.length > 0) {
            try {
                // Convert the first argument to an integer
                int value = Integer.parseInt(args[0]);
                // Create a MyNumber object
                MyNumber myNum = new MyNumber(value);

                // Display the results of the checks
                System.out.println("Number: " + value);
                System.out.println("Is Negative? " + myNum.isNegative());
                System.out.println("Is Positive? " + myNum.isPositive());
                System.out.println("Is Zero? " + myNum.isZero());
                System.out.println("Is Odd? " + myNum.isOdd());
                System.out.println("Is Even? " + myNum.isEven());
            } catch (NumberFormatException e) {
                System.out.println("Please provide a valid integer.");
            }
        } else {
            System.out.println("Please provide a command line argument.");
        }
    }
}