slip 2
Q1
class Employee {
    // Instance variables
    private int id;
    private String name;
    private String deptName;
    private double salary;

    // Static variable to keep count of objects created
    private static int objectCount = 0;

    // Default constructor
    public Employee() {
        id = 0;
        name = "Unknown";
        deptName = "Unknown";
        salary = 0.0;
        objectCount++;
    }

    // Parameterized constructor
    public Employee(int id, String name, String deptName, double salary) {
        this.id = id;
        this.name = name;
        this.deptName = deptName;
        this.salary = salary;
        objectCount++;
    }

    // Static method to get object count
    public static int getObjectCount() {
        return objectCount;
    }

    // Method to display employee details
    public void display() {
        System.out.println("Employee ID: " + id);
        System.out.println("Name: " + name);
        System.out.println("Department Name: " + deptName);
        System.out.println("Salary: " + salary);
        System.out.println();
    }
}

// Main class
public class EmployeeTest {
    public static void main(String[] args) {
        // Creating Employee objects using parameterized constructor
        Employee emp1 = new Employee(1, "Alice", "HR", 50000);
        System.out.println("Object Count: " + Employee.getObjectCount());
        
        Employee emp2 = new Employee(2, "Bob", "IT", 60000);
        System.out.println("Object Count: " + Employee.getObjectCount());
        
        Employee emp3 = new Employee(3, "Charlie", "Finance", 55000);
        System.out.println("Object Count: " + Employee.getObjectCount());

        // Displaying details of each employee
        System.out.println("--- Employee Details ---");
        emp1.display();
        emp2.display();
        emp3.display();
    }
}
--------------------------------------
Q2
// Marker interface
interface ProductMarker {
    // No methods, just serves as a marker
}

// Product class implementing the marker interface
class Product implements ProductMarker {
    // Instance variables
    private int productId;
    private String productName;
    private double productCost;
    private int productQuantity;

    // Static variable to keep count of objects created
    private static int objectCount = 0;

    // Default constructor
    public Product() {
        productId = 0;
        productName = "Unknown";
        productCost = 0.0;
        productQuantity = 0;
        objectCount++;
    }

    // Parameterized constructor
    public Product(int productId, String productName, double productCost, int productQuantity) {
        this.productId = productId;
        this.productName = productName;
        this.productCost = productCost;
        this.productQuantity = productQuantity;
        objectCount++;
    }

    // Static method to get object count
    public static int getObjectCount() {
        return objectCount;
    }

    // Method to display product details
    public void display() {
        System.out.println("Product ID: " + productId);
        System.out.println("Product Name: " + productName);
        System.out.println("Product Cost: " + productCost);
        System.out.println("Product Quantity: " + productQuantity);
        System.out.println();
    }
}

// Main class
public class ProductTest {
    public static void main(String[] args) {
        // Creating Product objects using parameterized constructor
        Product prod1 = new Product(101, "Laptop", 800.0, 10);
        System.out.println("Object Count: " + Product.getObjectCount());
        
        Product prod2 = new Product(102, "Smartphone", 600.0, 15);
        System.out.println("Object Count: " + Product.getObjectCount());
        
        Product prod3 = new Product(103, "Tablet", 300.0, 20);
        System.out.println("Object Count: " + Product.getObjectCount());

        // Displaying details of each product
        System.out.println("--- Product Details ---");
        prod1.display();
        prod2.display();
        prod3.display();
    }
}
